plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

def getSecrets() {
    Properties props = new Properties()
    File propFile = file('../secrets.properties')
    if (propFile.exists()) {
        props.load(new FileInputStream(propFile))
    }
    return props
}

android {
    namespace 'yaremchuken.quizknight'
    compileSdk 34

    defaultConfig {
        applicationId "yaremchuken.quizknight"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        Properties secrets = getSecrets()
        resValue "string", "YA_TRANSLATE_API_KEY", secrets["yandex.cloud.translate.api.key"]
        resValue "string", "YA_DICTIONARY_API_KEY", secrets["yandex.dictionary.api.key"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }
}

dependencies {
    def roomVersion = '2.5.1'

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.activity:activity-ktx:1.7.2"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.1'

    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.28'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Choose one of the following:
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
//    // or Material Design 2
//    implementation 'androidx.compose.material:material'
//    // or skip Material Design and build directly on top of foundational components
//    implementation 'androidx.compose.foundation:foundation'
//    // or only import the main APIs for the underlying toolkit systems,
//    // such as input and measurement/layout
//    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

//    // Optional - Included automatically by material, only add when you need
//    // the icons but not the material library (e.g. when using Material3 or a
//    // custom design system based on Foundation)
//    implementation 'androidx.compose.material:material-icons-core'
//    // Optional - Add full set of material icons
//    implementation 'androidx.compose.material:material-icons-extended'
//    // Optional - Add window size utils
//    implementation 'androidx.compose.material3:material3-window-size-class'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.8.1'
//    // Optional - Integration with ViewModels
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
//    // Optional - Integration with LiveData
//    implementation 'androidx.compose.runtime:runtime-livedata'
//    // Optional - Integration with RxJava
//    implementation 'androidx.compose.runtime:runtime-rxjava2'
}